import { AfterViewInit, ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges } from '@angular/core';
import { CurrencyPipe, DecimalPipe } from '@angular/common';
import { PoTooltipDirective } from '../../directives';
import { PoColorService } from '../../services/po-color';
import { PoLanguageService } from '../../services/po-language/po-language.service';
import { PoModalAction } from '../po-modal';
import { PoPopupAction } from '../po-popup';
import { PoTableColumn } from '../po-table';
import { PoChartBaseComponent } from './po-chart-base.component';
import { PoChartGridUtils } from './po-chart-grid-utils';
import { PoChartGaugeUtils } from './po-chart-gauge-utils';
import * as i0 from "@angular/core";
/**
 * @docsExtends PoChartBaseComponent
 *
 * @example
 *
 * <example name="po-chart-basic" title="PO Chart Basic">
 *  <file name="sample-po-chart-basic/sample-po-chart-basic.component.html"> </file>
 *  <file name="sample-po-chart-basic/sample-po-chart-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-chart-labs" title="PO Chart Labs">
 *  <file name="sample-po-chart-labs/sample-po-chart-labs.component.html"> </file>
 *  <file name="sample-po-chart-labs/sample-po-chart-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-chart-coffee-ranking" title="PO Chart - Coffee Ranking">
 *  <file name="sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.html"> </file>
 *  <file name="sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.ts"> </file>
 * </example>
 *
 * <example name="po-chart-summary" title="PO Chart - Summary">
 *  <file name="sample-po-chart-summary/sample-po-chart-summary.component.html"> </file>
 *  <file name="sample-po-chart-summary/sample-po-chart-summary.component.ts"> </file>
 * </example>
 *
 * <example name="po-chart-world-exports" title="PO Chart - World Exports">
 *  <file name="sample-po-chart-world-exports/sample-po-chart-world-exports.component.html"> </file>
 *  <file name="sample-po-chart-world-exports/sample-po-chart-world-exports.component.ts"> </file>
 * </example>
 */
export declare class PoChartComponent extends PoChartBaseComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {
    el: ElementRef;
    private readonly currencyPipe;
    private readonly decimalPipe;
    private readonly colorService;
    private readonly cdr;
    poTooltip: QueryList<PoTooltipDirective>;
    targetRef: ElementRef;
    chartContainer: ElementRef;
    tooltipText: string;
    originalHeight: number;
    originalRadiusGauge: any;
    chartMarginTop: string;
    isTypeBar: boolean;
    boundaryGap: boolean;
    listTypePieDonut: Array<any>;
    itemsTypeDonut: Array<any>;
    isGaugeSingle: boolean;
    itemsTypeGauge: Array<any>;
    itemsColorTypeGauge: any[];
    protected actionModal: PoModalAction;
    showPopup: boolean;
    protected itemsTable: any[];
    protected columnsTable: Array<PoTableColumn>;
    protected isExpanded: boolean;
    protected legendData: Array<{
        name: string;
        color: string;
    }>;
    protected headerHeight: number;
    protected paddingContainerGauge: number;
    protected descriptionHeight: number;
    protected positionTooltip: string;
    protected tooltipTitle: any;
    protected tooltipDescriptionGauge: any;
    protected chartGridUtils: PoChartGridUtils;
    protected chartGaugeUtils: PoChartGaugeUtils;
    protected isTypeGauge: boolean;
    protected popupActions: Array<PoPopupAction>;
    private chartInstance;
    private currentRenderer;
    private resizeObserver;
    private intersectionObserver;
    private hideDomEchartsDiv;
    private readonly vcr;
    get showHeader(): string | boolean;
    constructor(el: ElementRef, currencyPipe: CurrencyPipe, decimalPipe: DecimalPipe, colorService: PoColorService, cdr: ChangeDetectorRef, languageService: PoLanguageService);
    changeTheme: (event: any) => void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    showTooltipTitle(e: MouseEvent): void;
    showTooltipDescription(e: MouseEvent): void;
    getCSSVariable(variable: string, selector?: string): string;
    openModal(): Promise<void>;
    toggleExpand(): void;
    private observeContainerResize;
    private checkShowCEcharts;
    private setInitialPopupActions;
    private setHeightProperties;
    private initECharts;
    private initEChartsEvents;
    private setTooltipProperties;
    private setChartsProperties;
    private setOptions;
    private formatLabelOption;
    private setOptionLegend;
    private setSeries;
    private setSerieEmphasis;
    private setTypeSerie;
    private setTableProperties;
    private setTablePropertiesTypeBar;
    private setTablePropertiesTypeGauge;
    private setTableColumns;
    private downloadCsv;
    private exportImage;
    private exportSvgAsImage;
    private configureImageCanvas;
    private setHeaderProperties;
    private setPopupActions;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoChartComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PoChartComponent, "po-chart", never, {}, {}, never, never, false, never>;
}
