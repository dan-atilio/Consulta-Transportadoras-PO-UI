import { AfterViewChecked, AfterViewInit, ChangeDetectorRef, QueryList } from '@angular/core';
import { PoThemeService } from '../../../services';
import { PoCheckboxComponent } from '../po-checkbox/po-checkbox.component';
import { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';
import { PoCheckboxGroupBaseComponent } from './po-checkbox-group-base.component';
import * as i0 from "@angular/core";
/**
 * @docsExtends PoCheckboxGroupBaseComponent
 *
 * @example
 *
 * <example name="po-checkbox-group-basic" title="PO Checkbox Group Basic">
 *  <file name="sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.html"> </file>
 *  <file name="sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-checkbox-group-labs" title="PO Checkbox Group Labs">
 *  <file name="sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.html"> </file>
 *  <file name="sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-checkbox-group-password-policy" title="PO Checkbox Group – Security policy">
 *  <file name="sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.html"> </file>
 *  <file name="sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.ts"> </file>
 * </example>
 */
export declare class PoCheckboxGroupComponent extends PoCheckboxGroupBaseComponent implements AfterViewChecked, AfterViewInit {
    private changeDetector;
    protected poThemeService: PoThemeService;
    checkboxLabels: QueryList<PoCheckboxComponent>;
    private el;
    constructor(changeDetector: ChangeDetectorRef, poThemeService: PoThemeService);
    ngAfterViewChecked(): void;
    ngAfterViewInit(): void;
    onBlur(checkbox: PoCheckboxComponent): void;
    emitAdditionalHelp(): void;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoCheckboxGroupComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoCheckboxGroupComponent, { static: true }) checkbox: PoCheckboxGroupComponent;
     *
     * focusCheckbox() {
     *   this.checkbox.focus();
     * }
     * ```
     */
    focus(): void;
    getAdditionalHelpTooltip(): string;
    getErrorPattern(): string;
    hasInvalidClass(): any;
    onKeyDown(event: KeyboardEvent, option: PoCheckboxGroupOption, checkbox?: PoCheckboxComponent): void;
    /**
     * Método que exibe `p-additionalHelpTooltip` ou executa a ação definida em `p-additionalHelp`.
     * Para isso, será necessário configurar uma tecla de atalho utilizando o evento `p-keydown`.
     *
     * ```
     * <po-checkbox-group
     *  #checkboxGroup
     *  ...
     *  p-additional-help-tooltip="Mensagem de ajuda complementar"
     *  (p-keydown)="onKeyDown($event, checkboxGroup)"
     * ></po-checkbox-group>
     * ```
     * ```
     * ...
     * onKeyDown(event: KeyboardEvent, inp: PoCheckboxGroupComponent): void {
     *  if (event.code === 'F9') {
     *    inp.showAdditionalHelp();
     *  }
     * }
     * ```
     */
    showAdditionalHelp(): boolean;
    showAdditionalHelpIcon(): boolean;
    trackByFn(index: any): any;
    private isAdditionalHelpEventTriggered;
    private isCheckboxOptionFocused;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoCheckboxGroupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PoCheckboxGroupComponent, "po-checkbox-group", never, {}, {}, never, never, false, never>;
}
