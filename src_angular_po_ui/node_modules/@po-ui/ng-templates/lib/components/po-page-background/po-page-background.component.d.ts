import { EventEmitter, OnInit } from '@angular/core';
import { PoLanguage, PoLanguageService, PoSelectOption, PoThemeService } from '@po-ui/ng-components';
import * as i0 from "@angular/core";
export declare class PoPageBackgroundComponent implements OnInit {
    poLanguageService: PoLanguageService;
    protected poThemeService: PoThemeService;
    /** Insere uma imagem de destaque ao lado direito do container. */
    background?: string;
    /** Idioma inicial selecionado no combo */
    initialSelectLanguage?: string;
    /** Designa se o logotipo deve desaparecer em resoluções menores. */
    hideLogo?: boolean;
    /** Texto de destaque sobreposto à imagem de destaque. Essa opção é utilizada em conjunto com o atributo `p-background`. */
    highlightInfo?: string;
    /**
     * @optional
     *
     * @description
     *
     * Evento disparado ao selecionar alguma opção no seletor de idiomas.
     * Para este evento será passado como parâmetro o valor de idioma selecionado.
     */
    selectedLanguage: EventEmitter<string>;
    selectedLanguageOption: string;
    private _componentsSize?;
    private _showSelectLanguage?;
    private _languagesList;
    private _selectLanguageOptions;
    /**
     * @optional
     *
     * @description
     *
     * Define o tamanho dos componentes de formulário no template:
     * - `small`: aplica a medida small de cada componente (disponível apenas para acessibilidade AA).
     * - `medium`: aplica a medida medium de cada componente.
     *
     * > Caso a acessibilidade AA não esteja configurada, o tamanho `medium` será mantido.
     * Para mais detalhes, consulte a documentação do [po-theme](https://po-ui.io/documentation/po-theme).
     *
     * @default `medium`
     */
    set componentsSize(value: string);
    get componentsSize(): string;
    /** Lista de idiomas para o combo box */
    set languagesList(value: Array<PoLanguage>);
    get languagesList(): Array<PoLanguage>;
    /** Caminho para a logomarca localizada na parte superior. */
    logo?: string;
    /** Texto alternativo para a logomarca. */
    logoAlt?: string;
    /**
     * @optional
     *
     * @description
     *
     * Caminho para a logomarca localizada no rodapé.
     */
    secondaryLogo: string;
    /** Define se o seletor de idiomas deve ser exibido. */
    set showSelectLanguage(showSelectLanguage: boolean);
    get showSelectLanguage(): boolean;
    constructor(poLanguageService: PoLanguageService, poThemeService: PoThemeService);
    ngOnInit(): void;
    onChangeLanguage(): void;
    get selectLanguageOptions(): Array<PoSelectOption>;
    private setLanguageOptions;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoPageBackgroundComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PoPageBackgroundComponent, "po-page-background", never, { "background": { "alias": "p-background"; "required": false; }; "initialSelectLanguage": { "alias": "p-initial-language"; "required": false; }; "hideLogo": { "alias": "p-hide-logo"; "required": false; }; "highlightInfo": { "alias": "p-highlight-info"; "required": false; }; "componentsSize": { "alias": "p-components-size"; "required": false; }; "languagesList": { "alias": "p-languages"; "required": false; }; "logo": { "alias": "p-logo"; "required": false; }; "logoAlt": { "alias": "p-logo-alt"; "required": false; }; "secondaryLogo": { "alias": "p-secondary-logo"; "required": false; }; "showSelectLanguage": { "alias": "p-show-select-language"; "required": false; }; }, { "selectedLanguage": "p-selected-language"; }, never, ["*"], false, never>;
}
