import { EventEmitter } from '@angular/core';
import { PoComboOption, PoLanguageService, PoModalAction, PoModalComponent, PoThemeService } from '@po-ui/ng-components';
import { PoPageDynamicSearchFilters } from '../interfaces/po-page-dynamic-search-filters.interface';
import { PoAdvancedFilterLiterals } from './po-advanced-filter-literals.interface';
import * as i0 from "@angular/core";
export declare const poAdvancedFiltersLiteralsDefault: {
    en: PoAdvancedFilterLiterals;
    es: PoAdvancedFilterLiterals;
    pt: PoAdvancedFilterLiterals;
    ru: PoAdvancedFilterLiterals;
};
/**
 * @docsPrivate
 *
 * @description
 *
 * Filtro de busca avançada criado a partir de um formulário dinâmico.
 * Componente de uso interno.
 */
export declare class PoAdvancedFilterBaseComponent {
    protected poThemeService: PoThemeService;
    poModal: PoModalComponent;
    /**
     * Mantém na modal de busca avançada os valores preenchidos do último filtro realizado pelo usuário.
     */
    keepFilters: boolean;
    /** Função que será disparada e receberá os valores do formulário ao ser clicado no botão buscar. */
    searchEvent: EventEmitter<any>;
    filter: {};
    language: string;
    primaryAction: PoModalAction;
    secondaryAction: PoModalAction;
    protected optionsServiceChosenOptions: Array<PoComboOption>;
    private _componentsSize?;
    private _filters;
    private _literals;
    /**
     * @optional
     *
     * @description
     *
     * Define o tamanho dos componentes de formulário no template:
     * - `small`: aplica a medida small de cada componente (disponível apenas para acessibilidade AA).
     * - `medium`: aplica a medida medium de cada componente.
     *
     * > Caso a acessibilidade AA não esteja configurada, o tamanho `medium` será mantido.
     * Para mais detalhes, consulte a documentação do [po-theme](https://po-ui.io/documentation/po-theme).
     *
     * @default `medium`
     */
    set componentsSize(value: string);
    get componentsSize(): string;
    /**
     * Coleção de objetos que implementam a interface PoPageDynamicSearchFilters, para definição dos campos que serão criados
     * dinamicamente.
     */
    set filters(filters: Array<PoPageDynamicSearchFilters>);
    get filters(): Array<PoPageDynamicSearchFilters>;
    /** Objeto com as literais usadas no `po-advanced-filter`. */
    set literals(value: PoAdvancedFilterLiterals);
    get literals(): PoAdvancedFilterLiterals;
    constructor(languageService: PoLanguageService, poThemeService: PoThemeService);
    private getValuesFromForm;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoAdvancedFilterBaseComponent, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PoAdvancedFilterBaseComponent, never, never, { "keepFilters": { "alias": "p-keep-filters"; "required": false; }; "componentsSize": { "alias": "p-components-size"; "required": false; }; "filters": { "alias": "p-filters"; "required": false; }; "literals": { "alias": "p-literals"; "required": false; }; }, { "searchEvent": "p-search-event"; }, never, never, true, never>;
    static ngAcceptInputType_keepFilters: any;
}
